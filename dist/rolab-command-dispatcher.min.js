/**
 * Simple command dispatcher module for AngularJS.
 * @version v0.0.3 - 2014-03-12
 * @link https://github.com/RSSchermer/command-dispatcher
 * @author R.S. Schermer
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */

"use strict";!function(){var a=angular.module("rlCommandDispatcher",[]);a.provider("commandDispatcher",function(){var a={},b={beforeInitializeListeners:{},afterInitializeListeners:{},beforeExecuteListeners:{},afterExecuteListeners:{}},c=function(a,b){this.dispatch=function(c,d){if(!a[c])throw new Error('Unable to find command with name "'+c+'". Did you register it with the commandDispatcherProvider before registering the listener?');var e=angular.copy(a[c]);"function"==typeof e.initialize&&(b.beforeInitializeListeners[c]&&angular.forEach(b.beforeInitializeListeners[c],function(a){a.notify(e,"beforeInitialize",c)}),e.initialize(d),b.afterInitializeListeners[c]&&angular.forEach(b.afterInitializeListeners[c],function(a){a.notify(e,"afterInitialize",c)})),b.beforeExecuteListeners[c]&&angular.forEach(b.beforeExecuteListeners[c],function(a){a.notify(e,"beforeExecute",c)}),e.execute(),b.afterExecuteListeners[c]&&angular.forEach(b.afterExecuteListeners[c],function(a){a.notify(e,"afterExecute",c)})}};this.registerCommand=function(b,c){if("function"!=typeof c.execute)throw new Error("Command must have an 'execute' method.");a[b]=c},this.registerListener=function(a,c,d){if("function"!=typeof d.notify)throw new Error("Listener must have a 'notify' method.");switch(a){case"beforeInitialize":b.beforeInitializeListeners[c]||(b.beforeInitializeListeners[c]=[]),b.beforeInitializeListeners[c].push(d);break;case"afterInitialize":b.afterInitializeListeners[c]||(b.afterInitializeListeners[c]=[]),b.afterInitializeListeners[c].push(d);break;case"beforeExecute":b.beforeExecuteListeners[c]||(b.beforeExecuteListeners[c]=[]),b.beforeExecuteListeners[c].push(d);break;case"afterExecute":b.afterExecuteListeners[c]||(b.afterExecuteListeners[c]=[]),b.afterExecuteListeners[c].push(d);break;default:throw new Error('"'+a+'" is an unsupported listener type.')}},this.$get=function(){return new c(a,b)}})}();